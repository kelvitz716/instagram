

services:
  bot:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: instagram-telegram-bot
    volumes:
      - ./downloads:/app/downloads
      - ./data:/app/data:rw
      - ./sessions:/app/downloads/sessions:rw
      - ./uploads:/app/uploads
      - ./temp:/app/temp
      - ./telegram:/app/telegram
      - ./gallery-dl-cookies.txt:/app/gallery-dl-cookies.txt:ro
      - ./.env:/app/.env:ro
      - ./config:/app/config:ro
    user: "${UID:-1000}:${GID:-1000}"
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - TZ=UTC
      - PATH=/usr/local/bin:$PATH
      - PYTHONUNBUFFERED=1
      # Performance tuning
      - MAX_CONCURRENT_DOWNLOADS=3
      - MAX_CONCURRENT_UPLOADS=3
      - CACHE_TTL=3600
      - CONNECTION_POOL_SIZE=10
      - RATE_LIMIT_REQUESTS=30
      - RATE_LIMIT_PERIOD=60
      # Memory management
      - PYTHONMALLOC=malloc
      - MALLOC_TRIM_THRESHOLD_=65536
      - MALLOC_ARENA_MAX=2
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.75'
        reservations:
          memory: 512M
          cpus: '0.25'
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: ["CMD", "python", "healthcheck.py"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}"
        compress: "true"
        labels: "production"
        env: "production"
    stop_grace_period: 30s